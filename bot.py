import sys
import os
import locale

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä—É—Å—Å–∫—É—é –ª–æ–∫–∞–ª—å
try:
    locale.setlocale(locale.LC_ALL, 'ru_RU.UTF-8')
except:
    try:
        locale.setlocale(locale.LC_ALL, 'Russian_Russia.1251')
    except:
        pass

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –¥–ª—è –≤—ã–≤–æ–¥–∞
sys.stdout.reconfigure(encoding='utf-8')
import os
import telebot
from flask import Flask, request
from telebot.types import WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton

app = Flask(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN = os.environ.get('BOT_TOKEN', '8315566098:AAEIVhFSbWLkvdRsdRaWrrzwzU_hBlf8X64')
YOUR_USER_ID = 5160108515

bot = telebot.TeleBot(BOT_TOKEN)

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    web_app = WebAppInfo("https://77anton77.github.io/vakhta-calendar/")
    
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton(
            "üìÖ –û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤–∞—Ö—Ç–æ–≤–∏–∫–∞", 
            web_app=web_app
        )
    )
    
    welcome_text = """
üóìÔ∏è *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤–∞—Ö—Ç–æ–≤–∏–∫–∞!*

*–í–µ—Ä—Å–∏—è 0.1 (—Ç–µ—Å—Ç–æ–≤–∞—è)*

*–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:*
‚Ä¢ üìã –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã 28/28
‚Ä¢ üèùÔ∏è –î–≤–∞ —Ä–µ–∂–∏–º–∞: –°—Ç–∞–Ω–¥–∞—Ä—Ç –∏ –°–∞—Ö–∞–ª–∏–Ω  
‚Ä¢ ‚úèÔ∏è –†—É—á–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω–µ–π
‚Ä¢ üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ–ª—å–Ω–∏—á–Ω—ã—Ö/–æ—Ç–ø—É—Å–∫–æ–≤
‚Ä¢ üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

*–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:*
1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å
2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –≤–∞—Ö—Ç—ã  
3. –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–Ω—è
4. –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ

*‚ö†Ô∏è –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è!*
–ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–∏—Ç–µ –æ—à–∏–±–∫–∏ –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è - –Ω–∞–ø–∏—à–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É

*–î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏:*
/feedback - —Å–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ
/contact - —Å–≤—è–∑—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º

*–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!* üöÄ
"""
    
    bot.send_message(
        message.chat.id,
        welcome_text,
        reply_markup=keyboard,
        parse_mode='Markdown'
    )

@bot.message_handler(commands=['feedback'])
def get_feedback(message):
    feedback_text = message.text.replace('/feedback', '').strip()
    
    user_info = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.first_name}"
    if message.from_user.username:
        user_info += f" (@{message.from_user.username})"
    
    if not feedback_text:
        bot.reply_to(
            message,
            "üìù *–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å*\n\n"
            "–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏:\n"
            "`/feedback –≤–∞—à —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å`\n\n"
            "_–ü—Ä–∏–º–µ—Ä:_ /feedback –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–Ω–æ–ø–∫–∞ '–°—Ç–∞—Ä—Ç –≤–∞—Ö—Ç—ã'",
            parse_mode='Markdown'
        )
        return
    
    bot.send_message(
        YOUR_USER_ID, 
        f"üìù –ù–æ–≤—ã–π —Ñ–∏–¥–±–µ–∫:\n{user_info}\nID: {message.from_user.id}\n\n–°–æ–æ–±—â–µ–Ω–∏–µ: {feedback_text}"
    )
    bot.reply_to(message, "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.")

@bot.message_handler(commands=['contact'])
def contact_developer(message):
    bot.reply_to(
        message, 
        "üìß –°–≤—è–∑—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º:\n\n"
        "‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ /feedback –≤–∞—à–µ_—Å–æ–æ–±—â–µ–Ω–∏–µ\n" 
        "‚Ä¢ –ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–ø—Ä—è–º—É—é\n\n"
        "–°–æ–æ–±—â–∞–π—Ç–µ –æ–± –æ—à–∏–±–∫–∞—Ö –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö!"
    )

@bot.message_handler(commands=['calendar'])
def open_calendar(message):
    web_app = WebAppInfo("https://77anton77.github.io/vakhta-calendar/")
    
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton(
            "üìÖ –û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å", 
            web_app=web_app
        )
    )
    
    bot.send_message(
        message.chat.id,
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤–∞—Ö—Ç–æ–≤–∏–∫–∞:",
        reply_markup=keyboard
    )

@bot.message_handler(func=lambda message: True)
def echo_all(message):
    bot.reply_to(message, "–ù–∞–ø–∏—à–∏—Ç–µ /start –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è")

# Flask endpoints –¥–ª—è health checks –∏ webhook
@app.route('/')
def health_check():
    return "ü§ñ –ë–æ—Ç –≤–∞—Ö—Ç–æ–≤–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Ä–∞–±–æ—Ç–∞–µ—Ç (Webhook)! üöÄ", 200

@app.route('/health')
def health():
    return "‚úÖ OK", 200

@app.route('/webhook/' + BOT_TOKEN, methods=['POST'])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return 'OK', 200
    return 'Forbidden', 403

@app.route('/set_webhook')
def set_webhook():
    try:
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook
        bot.remove_webhook()
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
        app_url = os.environ.get('FLY_APP_NAME', 'vakhta-bot.fly.dev')
        webhook_url = f'https://{app_url}/webhook/{BOT_TOKEN}'
        result = bot.set_webhook(url=webhook_url)
        
        return f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {result}<br>URL: {webhook_url}", 200
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}", 500

@app.route('/remove_webhook')
def remove_webhook():
    try:
        result = bot.remove_webhook()
        return f"‚úÖ Webhook —É–¥–∞–ª–µ–Ω: {result}", 200
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {e}", 500

if __name__ == "__main__":
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    try:
        print("üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é webhook...")
        app_url = os.environ.get('FLY_APP_NAME', 'vakhta-bot.fly.dev')
        webhook_url = f'https://{app_url}/webhook/{BOT_TOKEN}'
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook
        bot.remove_webhook()
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
        bot.set_webhook(url=webhook_url)
        
        print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook: {e}")
        print("üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞—é –∑–∞–ø—É—Å–∫...")
    
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ Webhook! üöÄ")
    print("üì° Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä (–±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ webhook)
    app.run(host='0.0.0.0', port=8080, debug=False)
